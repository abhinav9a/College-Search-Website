# Generated by Django 3.2.5 on 2021-08-01 15:07

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=32)),
                ('state', models.CharField(choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu and Kashmir ', 'Jammu and Kashmir '), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), (
                    'Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Chandigarh', 'Chandigarh'), ('Lakshadweep', 'Lakshadweep'), ('Puducherry', 'Puducherry')], max_length=32)),
                ('slug', models.SlugField(max_length=164, unique=True)),
                ('established_in', models.CharField(
                    blank=True, max_length=4, null=True)),
                ('college_type', models.CharField(
                    blank=True, max_length=32, null=True)),
                ('approved_by', models.CharField(
                    blank=True, max_length=32, null=True)),
                ('college_ranking', models.CharField(
                    blank=True, max_length=5, null=True)),
                ('campus_size', models.CharField(
                    blank=True, max_length=32, null=True)),
                ('student_intake', models.IntegerField(blank=True, null=True)),
                ('highest_placement', models.CharField(
                    blank=True, max_length=16, null=True)),
                ('avg_placement', models.CharField(
                    blank=True, max_length=16, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('college_overall_score', models.DecimalField(
                    blank=True, decimal_places=1, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=10)),
                ('message', models.TextField()),
                ('is_solved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Inquiries',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('college_name', models.CharField(max_length=128)),
                ('image', models.ImageField(upload_to='')),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('ratings', models.IntegerField(choices=[
                 (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField()),
                ('published_on', models.DateTimeField(auto_now_add=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='reviews', to='website.college')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_on'],
            },
        ),
        migrations.CreateModel(
            name='ExamDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('exam_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(
                    1984), django.core.validators.MaxValueValidator(2023)])),
                ('slug', models.SlugField(max_length=164, unique=True)),
                ('exam_mode', multiselectfield.db.fields.MultiSelectField(
                    choices=[('Online', 'Online'), ('Offline', 'Offline')], max_length=14)),
                ('application_start_date', models.DateField(blank=True, null=True)),
                ('application_end_date', models.DateField(blank=True, null=True)),
                ('exam_start_date', models.DateField(blank=True, null=True)),
                ('exam_end_date', models.DateField(blank=True, null=True)),
                ('information', ckeditor_uploader.fields.RichTextUploadingField(
                    blank=True, null=True)),
                ('stream', models.ManyToManyField(to='website.Stream')),
            ],
            options={
                'ordering': ['-exam_year'],
            },
        ),
        migrations.CreateModel(
            name='EducationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(blank=True, choices=[('10th', '10th'), ('12th', '12th'), (
                    'UG', 'UG'), ('PG', 'PG'), ('Ph.D.', 'Ph.D.')], max_length=5, null=True)),
                ('passing_year', models.CharField(
                    blank=True, max_length=4, null=True)),
                ('university', models.CharField(
                    blank=True, max_length=64, null=True)),
                ('score', models.CharField(blank=True, max_length=4, null=True)),
                ('stream', models.CharField(blank=True, max_length=64, null=True)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Educational Details',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Course')),
                ('type', models.CharField(
                    blank=True, help_text='e.g. Under Graduate, Post Graduate, etc.', max_length=64, null=True)),
                ('mode', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[
                 ('Part-Time', 'Part-Time'), ('Full-Time', 'Full-Time'), ('Distance Learning', 'Distance Learning')], max_length=37, null=True)),
                ('fees', models.CharField(blank=True, max_length=64, null=True)),
                ('duration', models.CharField(max_length=4)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='courses', to='website.college')),
            ],
        ),
        migrations.AddField(
            model_name='college',
            name='facilities',
            field=models.ManyToManyField(blank=True, to='website.Facility'),
        ),
        migrations.AddField(
            model_name='college',
            name='stream',
            field=models.ManyToManyField(to='website.Stream'),
        ),
        migrations.AddConstraint(
            model_name='examdetail',
            constraint=models.UniqueConstraint(
                fields=('name', 'exam_year'), name='unique_exam'),
        ),
        migrations.AddConstraint(
            model_name='educationdetails',
            constraint=models.UniqueConstraint(
                fields=('user', 'degree'), name='user_degree'),
        ),
    ]
